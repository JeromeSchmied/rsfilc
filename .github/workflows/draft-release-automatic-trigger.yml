name: Automatic trigger draft release

on:
  push:
    tags:
      - "v*"

jobs:
  call-workflow-build-artifacts-and-run-tests:
    uses: ./.github/workflows/build-artifacts-and-run-tests.yml

  automated-draft-release:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    needs: call-workflow-build-artifacts-and-run-tests
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Fetch
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: list all downloaded artifacts
        run: |
          ls -AR artifacts/
          echo THIS WAS artifacts/

      - name: Organize Artifacts
        run: |
          # Create a directory for the final binaries
          mkdir -p release-binaries

          # Loop through each artifact subdirectory
          for artifact_dir in artifacts/*/; do
            # Get the platform name from the directory name
            platform=$(basename $artifact_dir)

            # Move and rename the file(s) inside the subdirectory
            for file in $artifact_dir/*; do
              filename=$(basename $file)
  
              # Check if the file has an extension
              if [[ "$filename" == *.* ]]; then
                extension="${filename##*.}" # Extract file extension
                new_name="$platform.$extension"
              else
                new_name="$platform" # No extension, use platform name as the filename
              fi

              # Move and rename the file
              mv "$file" "release-binaries/$new_name"
            done

            # Remove the now-empty subdirectory
            rmdir $artifact_dir
          done

      - name: Create GitHub Release
        id: create_release

        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
        with:
          files: release-binaries/*

      - name: Publish to crates.io
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CRATESIO_TOKEN }}
        run: |
          ls -la
          git status
          cargo publish
